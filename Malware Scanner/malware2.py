import os
import json
import requests
import time
import playsound
import threading

def get_scan_result(api_key, scan_id):
    # Consultar el resultado del escaneo
    url = 'https://www.virustotal.com/vtapi/v2/file/report'
    params = {'apikey': api_key, 'resource': scan_id}
    while True:
        response = requests.get(url, params=params)
        scan_result = json.loads(response.text)
        if scan_result["response_code"] == 1:
            break
        time.sleep(30)
    return scan_result

def play_music():
    # Reproducir música de fondo
    while True:
        playsound.playsound("background_music.mp3", True)

# Iniciar hilo de música
music_thread = threading.Thread(target=play_music)
music_thread.start()

print("Malware Scanner by Damian de Arce - Cybersecurity Specialist")

disclaimer = input("Esta herramienta de análisis de malware se entrega 'as-is' y está basada en el mejor esfuerzo. Damian de Arce no se hace responsable por el resultado ni los daños que esta o el malware pudiera ocasionar. ¿Desea continuar? (S/N)")
if disclaimer.upper() != "S":
    print("Operación cancelada")
    exit()

file_path = input("Ingresa la ruta del archivo a escanear: ")
if not os.path.isfile(file_path):
    print("El archivo especificado no existe o no se puede acceder.")
    exit()


api_key = '7d1008e00fc27a40466a3b22c46d633bc1d25c022bf9c1a19e072149be7f6031'
headers = {'Accept-Encoding': 'gzip, deflate', 'User-Agent': 'gzip,  Python requests library'}
params = {'apikey': api_key}


# Enviar el archivo a escanear
url = 'https://www.virustotal.com/vtapi/v2/file/scan'
with open(file_path, 'rb') as f:
    files = {'file': (file_path, f)}
    response = requests.post(url, headers=headers, params=params, files=files)
    f.close()
scan_id = json.loads(response.text)['scan_id']

# Obtener el resultado final del escaneo
scan_result = get_scan_result(api_key, scan_id)

# Imprimir el resultado formateado
positives = scan_result['positives']
total = scan_result['total']
if positives > 0:
    print(f'Se han detectado {positives} de {total} detectores que consideran este archivo como malicioso.')
else:
    print(f'Este archivo ha sido considerado seguro por {total} detectores.')

# Guardar resultados en un archivo txt
with open("scan_results.txt", "w") as f:
    json.dump(scan_result, f, indent=4)

# Mostrar el dibujo ASCII "ACCSA BLUE TEAM" y el mensaje de despedida
print("""
           _____ _____  _____           ____  _     _    _ ______   _______ ______          __  __ 
     /\   / ____/ ____|/ ____|  /\     |  _ \| |   | |  | |  ____| |__   __|  ____|   /\   |  \/  |
    /  \ | |   | |    | (___   /  \    | |_) | |   | |  | | |__       | |  | |__     /  \  | \  / |
   / /\ \| |   | |     \___ \ / /\ \   |  _ <| |   | |  | |  __|      | |  |  __|   / /\ \ | |\/| |
  / ____ \ |___| |____ ____) / ____ \  | |_) | |___| |__| | |____     | |  | |____ / ____ \| |  | |
 /_/    \_\_____\_____|_____/_/    \_\ |____/|______\____/|______|    |_|  |______/_/    \_\_|  |_|
                                                                                                   
                                                                                                   
""")
print("Gracias por utilizar nuestro producto.")
input("Ya puede cerrar la ventana, un reporte se genero en la raíz.")
